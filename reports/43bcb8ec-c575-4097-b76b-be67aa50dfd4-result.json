{"name": "Verifying cart status when new user open the website", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".btn btn-inverse btn-block btn-lg dropdown-toggle\"}\n  (Session info: chrome=133.0.6943.142); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF71928C6A5+28789]\n\t(No symbol) [0x00007FF7191F5B20]\n\t(No symbol) [0x00007FF719088F9A]\n\t(No symbol) [0x00007FF7190DF346]\n\t(No symbol) [0x00007FF7190DF57C]\n\t(No symbol) [0x00007FF719132B17]\n\t(No symbol) [0x00007FF71910736F]\n\t(No symbol) [0x00007FF71912F7E3]\n\t(No symbol) [0x00007FF719107103]\n\t(No symbol) [0x00007FF7190CFFC0]\n\t(No symbol) [0x00007FF7190D1273]\n\tGetHandleVerifier [0x00007FF7195D1AED+3458237]\n\tGetHandleVerifier [0x00007FF7195E829C+3550316]\n\tGetHandleVerifier [0x00007FF7195DDB9D+3507565]\n\tGetHandleVerifier [0x00007FF719352C6A+841274]\n\t(No symbol) [0x00007FF7192009EF]\n\t(No symbol) [0x00007FF7191FCB34]\n\t(No symbol) [0x00007FF7191FCCD6]\n\t(No symbol) [0x00007FF7191EC119]\n\tBaseThreadInitThunk [0x00007FFF669EE8D7+23]\n\tRtlUserThreadStart [0x00007FFF686BBF2C+44]", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4304a30fc2f71d42527b653fd3e1d6f8\")>\n\n    @allure.id(11)\n    @allure.title(\"Verifying cart status when new user open the website\")\n    @allure.feature(\"Add to cart\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"Test to verify that cart should be empty upon opening the website as a new user.\")\n    def test_011(setup):\n        test_case_id=\"TC-011\"\n        browser=AddToCart(setup)\n>       browser.CartValidation(cart_info_location,empty_cart_message,test_case_id)\n\ntest\\unite\\test_cart_homepage.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\home_page.py:100: in CartValidation\n    cart_info = self.driver.find_element(By.CLASS_NAME,CartInfoLocation).text.strip()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:898: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:429: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022EB0B8F0E0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7191EC119]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF669EE8D7+23]\\\\n\\\\tRtlUserThreadStart [0x00007FFF686BBF2C+44]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".btn btn-inverse btn-block btn-lg dropdown-toggle\"}\nE         (Session info: chrome=133.0.6943.142); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF71928C6A5+28789]\nE       \t(No symbol) [0x00007FF7191F5B20]\nE       \t(No symbol) [0x00007FF719088F9A]\nE       \t(No symbol) [0x00007FF7190DF346]\nE       \t(No symbol) [0x00007FF7190DF57C]\nE       \t(No symbol) [0x00007FF719132B17]\nE       \t(No symbol) [0x00007FF71910736F]\nE       \t(No symbol) [0x00007FF71912F7E3]\nE       \t(No symbol) [0x00007FF719107103]\nE       \t(No symbol) [0x00007FF7190CFFC0]\nE       \t(No symbol) [0x00007FF7190D1273]\nE       \tGetHandleVerifier [0x00007FF7195D1AED+3458237]\nE       \tGetHandleVerifier [0x00007FF7195E829C+3550316]\nE       \tGetHandleVerifier [0x00007FF7195DDB9D+3507565]\nE       \tGetHandleVerifier [0x00007FF719352C6A+841274]\nE       \t(No symbol) [0x00007FF7192009EF]\nE       \t(No symbol) [0x00007FF7191FCB34]\nE       \t(No symbol) [0x00007FF7191FCCD6]\nE       \t(No symbol) [0x00007FF7191EC119]\nE       \tBaseThreadInitThunk [0x00007FFF669EE8D7+23]\nE       \tRtlUserThreadStart [0x00007FFF686BBF2C+44]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: NoSuchElementException"}, "description": "Test to verify that cart should be empty upon opening the website as a new user.", "steps": [{"name": "Verifying if the cart feature is working fine", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".btn btn-inverse btn-block btn-lg dropdown-toggle\"}\n  (Session info: chrome=133.0.6943.142); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF71928C6A5+28789]\n\t(No symbol) [0x00007FF7191F5B20]\n\t(No symbol) [0x00007FF719088F9A]\n\t(No symbol) [0x00007FF7190DF346]\n\t(No symbol) [0x00007FF7190DF57C]\n\t(No symbol) [0x00007FF719132B17]\n\t(No symbol) [0x00007FF71910736F]\n\t(No symbol) [0x00007FF71912F7E3]\n\t(No symbol) [0x00007FF719107103]\n\t(No symbol) [0x00007FF7190CFFC0]\n\t(No symbol) [0x00007FF7190D1273]\n\tGetHandleVerifier [0x00007FF7195D1AED+3458237]\n\tGetHandleVerifier [0x00007FF7195E829C+3550316]\n\tGetHandleVerifier [0x00007FF7195DDB9D+3507565]\n\tGetHandleVerifier [0x00007FF719352C6A+841274]\n\t(No symbol) [0x00007FF7192009EF]\n\t(No symbol) [0x00007FF7191FCB34]\n\t(No symbol) [0x00007FF7191FCCD6]\n\t(No symbol) [0x00007FF7191EC119]\n\tBaseThreadInitThunk [0x00007FFF669EE8D7+23]\n\tRtlUserThreadStart [0x00007FFF686BBF2C+44]\n\n", "trace": "  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\base\\home_page.py\", line 100, in CartValidation\n    cart_info = self.driver.find_element(By.CLASS_NAME,CartInfoLocation).text.strip()\n                ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 898, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 429, in execute\n    self.error_handler.check_response(response)\n    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^\n  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "CartInfoLocation", "value": "'btn btn-inverse btn-block btn-lg dropdown-toggle'"}, {"name": "EmptyCartMessage", "value": "'0 item(s) - $0.00'"}, {"name": "testCaseID", "value": "'TC-011'"}], "start": 1741704037511, "stop": 1741704037635}], "attachments": [{"name": "log", "source": "5c8a6ed4-45a5-464f-9109-ea807876bbdb-attachment.txt", "type": "text/plain"}], "start": 1741704037510, "stop": 1741704037653, "uuid": "85a6fee2-43a1-4628-baef-05359bb72768", "historyId": "f929f336287653e192fb4719481c0d04", "testCaseId": "f929f336287653e192fb4719481c0d04", "fullName": "test.unite.test_cart_homepage#test_011", "labels": [{"name": "as_id", "value": 11}, {"name": "feature", "value": "Add to cart"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "test.unite"}, {"name": "suite", "value": "test_cart_homepage"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "18532-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.unite.test_cart_homepage"}]}