{"name": "Verifying cart status when new user open the website", "status": "failed", "statusDetails": {"message": "AssertionError: Test case TC-011 failed: Expected empty cart(0 item(s) - $0.00), but cart is not empty.", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"da54a0e542294590cafceaf8a7994e8d\")>\n\n    @allure.id(11)\n    @allure.title(\"Verifying cart status when new user open the website\")\n    @allure.feature(\"Add to cart\")\n    @allure.severity(allure.severity_level.NORMAL)\n    @allure.description(\"Test to verify that cart should be empty upon opening the website as a new user.\")\n    def test_011(setup):\n        test_case_id=\"TC-011\"\n        browser=AddToCart(setup)\n>       browser.CartValidation(cart_info_location,empty_cart_message,test_case_id)\n\ntest\\unite\\test_cart_homepage.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <base.home_page.AddToCart object at 0x000002C65655DD30>\nCartInfoLocation = '(//span)[9]', EmptyCartMessage = '0 item(s) - $0.00'\ntestCaseID = 'TC-011'\n\n    @allure.step(\"Verifying if the cart feature is working fine\")\n    def CartValidation(self,CartInfoLocation,EmptyCartMessage,testCaseID):\n        self.log.info(f\"[+] -> Validating Add to cart Button\")\n        cart_info = self.driver.find_element(By.XPATH,CartInfoLocation)\n        if EmptyCartMessage == cart_info and testCaseID == 'TC-010':\n            self.log.error(f\"[+] -> {testCaseID} Failed: Cart is empty when it shouldn't be. Cart info: {cart_info}\")\n            raise AssertionError(f\"Test case {testCaseID} failed: Expected non-empty cart, but cart is empty.\")\n    \n        elif EmptyCartMessage == cart_info and testCaseID == 'TC-011':\n            self.log.info(f\"[+] -> {testCaseID} Passed: Cart is empty as expected. Cart info: {cart_info}\")\n            assert True\n    \n        elif EmptyCartMessage != cart_info and testCaseID == 'TC-011':\n            self.log.error(f\"[+] -> {testCaseID} Failed: Cart should be empty, but it's not. Cart info: {cart_info}\")\n>           raise AssertionError(f\"Test case {testCaseID} failed: Expected empty cart({EmptyCartMessage}), but cart is not empty.\")\nE           AssertionError: Test case TC-011 failed: Expected empty cart(0 item(s) - $0.00), but cart is not empty.\n\nbase\\home_page.py:111: AssertionError"}, "description": "Test to verify that cart should be empty upon opening the website as a new user.", "steps": [{"name": "Verifying if the cart feature is working fine", "status": "failed", "statusDetails": {"message": "AssertionError: Test case TC-011 failed: Expected empty cart(0 item(s) - $0.00), but cart is not empty.\n", "trace": "  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"C:\\Users\\pranj\\OneDrive\\Desktop\\Automation_Project_OpenCart\\base\\home_page.py\", line 111, in CartValidation\n    raise AssertionError(f\"Test case {testCaseID} failed: Expected empty cart({EmptyCartMessage}), but cart is not empty.\")\n"}, "parameters": [{"name": "CartInfoLocation", "value": "'(//span)[9]'"}, {"name": "EmptyCartMessage", "value": "'0 item(s) - $0.00'"}, {"name": "testCaseID", "value": "'TC-011'"}], "start": 1741704441226, "stop": 1741704442263}], "attachments": [{"name": "log", "source": "185530c4-9338-4dc6-b79e-78a0f631a09b-attachment.txt", "type": "text/plain"}], "start": 1741704441225, "stop": 1741704442268, "uuid": "31d94482-953d-4d5c-98a0-5a147f1e0aca", "historyId": "f929f336287653e192fb4719481c0d04", "testCaseId": "f929f336287653e192fb4719481c0d04", "fullName": "test.unite.test_cart_homepage#test_011", "labels": [{"name": "as_id", "value": 11}, {"name": "feature", "value": "Add to cart"}, {"name": "severity", "value": "normal"}, {"name": "parentSuite", "value": "test.unite"}, {"name": "suite", "value": "test_cart_homepage"}, {"name": "host", "value": "MSI"}, {"name": "thread", "value": "19996-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.unite.test_cart_homepage"}]}